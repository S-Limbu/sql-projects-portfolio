- üß† Problem / Business Scenario: The company wants to understand user retention.
The product team is interested in analyzing how many users remain active over time, grouped by the month they signed up.
Your goal is to run a cohort analysis, tracking each signup cohort's activity in future months. 
This will help assess how well users are retained after their initial signup.

- üìö Concepts: CTE + DATE_TRUNC + JOIN + COUNT 

- üí° Why this matters:
  - High retention often signals a valuable product. Low retention means people aren't finding it useful.
  - Helps identify when and where users drop off so that teams can improve activation, engagement, or re-engagement efforts.
  - When new features or onboarding changes are launched, cohort analysis shows how user behavior shifts.

-- üîÑ 1. Drop existing table to avoid conflicts

DROP TABLE IF EXISTS signups, activity;

-- üß± 2. Create the table schema

CREATE TABLE signups (
  user_id INT,
  signup_date DATE
);

CREATE TABLE activity (
  user_id INT,
  activity_date DATE
);

-- üìä 3. Insert sample/mock data

INSERT INTO signups VALUES
(1, '2024-01-01'),
(2, '2024-01-15'),
(3, '2024-02-01'),
(4, '2024-02-05'),
(5, '2024-02-12'),
(6, '2024-02-12'),
(7, '2024-03-15'),
(8, '2024-03-21'),
(9, '2024-03-24'),
(10, '2024-03-25'),
(11, '2024-03-25'),
(12, '2024-03-25');

INSERT INTO activity VALUES
(1, '2024-01-10'), (1, '2024-02-10'),
(2, '2024-01-20'),
(3, '2024-02-05'), (3, '2024-03-10'),
(4, '2024-02-07'),
(5, '2024-02-13'), (5, '2024-02-14'), (5, '2024-02-17'),
(6, '2024-02-15'),
(7, '2024-03-17'), (7, '2024-03-19'),
(8, '2024-05-21'),
(9, '2024-04-23'), (9, '2024-04-24'),
(10, '2024-03-26'),
(11, '2024-05-27'), (11, '2024-05-29'),
(12, '2024-03-29');

-- üîç 4. Final query

WITH cohorts AS (
SELECT 
s.user_id,
DATE_TRUNC('month', s.signup_date) AS cohort_month,
DATE_TRUNC('month', a.activity_date) AS active_month
FROM signups s
JOIN activity a ON s.user_id = a.user_id
)
SELECT 
cohort_month,
active_month,
COUNT(DISTINCT user_id) AS active_users
FROM cohorts
GROUP BY cohort_month, active_month
ORDER BY cohort_month, active_month;

-- üñºÔ∏è Screenshot: screenshots/21-cohort-analysis-result.png
-- üìù Output: Showcases the retained users and in which months they were active.
